
static_resources:
  listeners:
#1- name: http_listener1
#1  address:
#1    socket_address: { address: 0.0.0.0, port_value: _SERVICEPORT1 }
#1  filter_chains:
#1  - filters:
#1    - name: envoy.http_connection_manager
#1      config:
#1        codec_type: auto
#         NOTE: Setting to true may have implications on either web-text-down-stream or internal ip authentication ??
#1        use_remote_address: true
#1        stat_prefix: ingress_http
#1        route_config:
#1          name: default_route
#1          virtual_hosts:
#1          - name: default_service
#1            domains: ["*"]
#1            routes:
#1            - match: { prefix: "/" }
#1              redirect:
#1                port_redirect: _SERVICEPORT2
#1                path_redirect: "/"
#1                https_redirect: true
#1            cors:
#1              allow_origin_regex:
#1              - "https?:\\/\\/_SERVICEDOMAIN(:\\d+)?"
#1              allow_methods: GET, PUT, DELETE, POST, OPTIONS
#1              allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,x-currency-reports-session-id
#1              max_age: "1728000"
#1              expose_headers: custom-header-1,grpc-status,grpc-message,x-currency-reports-session-id
#1        http_filters:
#1        - name: envoy.grpc_web
#1        - name: envoy.cors
#1        - name: envoy.router
  - name: http_listener2
    address:
      socket_address: { address: 0.0.0.0, port_value: _SERVICEPORT2 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
#         NOTE: Setting to true may have implications on either web-text-down-stream or internal ip authentication ??
          use_remote_address: true
          stat_prefix: ingress_http
#2        access_log:
#2          name: envoy.access_log_file
#2          config:
#2            path: /tmp/envoy.access.log
          route_config:
            name: default_route
            virtual_hosts:
            - name: default_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: default_app
                  max_grpc_timeout: 0s
              cors:
                allow_origin_regex:
                - "https?:\\/\\/_SERVICEDOMAIN(:\\d+)?"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,x-currency-reports-session-id
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message,x-currency-reports-session-id
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
#         - name: envoy.lua
#           config:
#             inline_code: |
#               function envoy_on_request(request_handle)
#                 request_handle:headers():add( "x-currency-reports-client-ip-1", request_handle:headers():get("x-forwarded-for") )
#                 request_handle:headers():add( "x-currency-reports-client-ip-2", request_handle:headers():get("x-envoy-external-address") )
#               end
          - name: envoy.router
#3    tls_context:
#3      common_tls_context:
#3        tls_certificates:
#3          - certificate_chain:
#3              filename: "/tmp/ca-and-crt.pem"
#3            private_key:
#3              filename: "/tmp/key.pem"
  clusters:
  - name: default_app
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
#    upstream_connection_options:
#      tcp_keepalive:
#        keepalive_time: 300
    hosts: [{ socket_address: { address: localhost, port_value: _SERVERPORT }}]

